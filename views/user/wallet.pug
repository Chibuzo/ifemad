extends layout 

block styleBlock 
    link(rel='stylesheet' href='/stylesheets/owl.carousel.min.css')
    link(rel='stylesheet' href='/stylesheets/owl.theme.default.min.css')

block content
    section.content-header
        h1 Virtual Wallet

    // Main content
    section.content
        .row
            .col-md-9
                .box
                    .box-header
                        h3.box-title Transactions
                    .box-body
                        .row 
                            .col-md-12.table-responsive
                                table.table.table-striped(style="margin-top: 10px")
                                    thead
                                        tr
                                            th Date
                                            th Description
                                            th Bank
                                            th Amount
                                            th Status

                                    tbody
                                        each trnx in withdrawals 

                                            tr
                                                td= view.formatDate(trnx.createdAt)
                                                td Withdrawal 
                                                td= trnx.bank 
                                                    br/ 
                                                    | #{trnx.account_number}
                                                td= 'â‚¦' + view.formatCurrency(trnx.amount) 
                                                td= trnx.status

            .col-md-3 
                h3 Wallet Balance: !{currency}#{view.formatCurrency(balance)}
                hr
                //- p #[strong TOP UP WALLET]
                //- .row
                //-     .col-md-12
                //-         .input-group
                //-             input.form-control#amount(type="text" name="amount" placeholder="Amount" aria-label="Amount")
                //-             .input-group-btn
                //-                 button.btn.btn-danger#topup(onClick=`makePayment('${user.email}', '${user.phone}', '${user.fullname}')`) Top Up
                .row(style="margin-top: 20px")      
                    .col-md-12 
                        P #[strong WITHDRAW FROM YOUR WALLET]
                        p Note that your withdrawal request will take about 24 hours to process    
                        button.btn.btn-success(data-toggle="modal" data-target="#withdrawal-modal") Request Withdrawal    

                    .col-md-12(style="margin-top: 40px") 


                        label Supported Currencies
                            select.form-control.form-control-lg(id="default_currency")
                                option(value="") -- Select Currency --
                                    each cur in currencies
                                        option(value=`${cur.code}`) #{cur.code} - [ !{cur.symbol} ]   

                            button.btn.btn-default#btn-save(style="margin-top: 8px") Change Currency

block Modals 
    #withdrawal-modal.modal.fade
        .modal-dialog
            .modal-content
                .modal-header
                    button.close(type='button' data-dismiss='modal' aria-label='Close')
                        span(aria-hidden='true') &times;
                    h4.modal-title Withdrawal Form
                .modal-body
                    form#account-form(action="/account/add-account" method="post")
                        .form-group.row 
                            .col-md-6
                                label Amount 
                                input(type="number" name="amount").form-control
                            .col-md-6
                                label Account Type 
                                select.form-control#account-type(name="bank" required)
                                    option(value="") -- Choose Account type --
                                    option(value="ng_dom" data-currency="USD") Nigerian Domicilliary Account
                                    option(value="us_account" data-currency="USD") US Account
                                    option(value="eur_gbp_account" data-currency="EUR") EUR Account
                                    option(value="eur_gbp_account" data-currency="GBP") GBP Account
                                    option(value="ghs_ugx_zmw_tzx_account" data-currency="GHS") GHS Account
                                    option(value="ghs_ugx_zmw_tzx_account" data-currency="UGX") UGX Account
                                    option(value="ghs_ugx_zmw_tzx_account" data-currency="ZMW") ZMW Account
                                    option(value="ghs_ugx_zmw_tzx_account" data-currency="TZX") TZX Account
                                    option(value="kes_account" data-currency="KES") KES Account
                                    option(value="zar_account" data-currency="ZAR") ZAR Account

                        //- .form-group 
                        //-     label Account Number 
                        //-     input.form-control(name="account_number" type="text" required)
                        //- .form-group 
                        //-     label Account Name 
                        //-     input.form-control(name="account_name" type="text" required)
                        //- .form-group 
                        //-     label Amount 
                        //-     input.form-control#amount(name="amount" type="text" required)  

                        #meta-form 

                        .form-group 
                            .alert.alert-info.hidden 

                .modal-footer
                    button.btn.btn-default.pull-left(type='button' data-dismiss='modal') Close
                    button.btn.btn-success#withdrawal-btn(type='button') Send Request

    script(src="/javascripts/transferForms.js")
block scriptBlock

    //- script(src="https://checkout.flutterwave.com/v3.js")

    script. 
        $(document).ready(function() {
            toastr.options = {
                timeOut: 0,
                closeButton: true,
                positionClass: "toast-bottom-full-width",
                onCloseClick: function() {
                    location.reload()
                }
            }
            //- $("#topup").click(function() {
            //-     const amount = $("#amount").val();
            //-     if (!amount) return;

            //-     $.post('/wallet/topup', { amount }, function(d) {
            //-         if (d.status.trim() === 'success') {
            //-             location.reload();
            //-             return;
            //-         }
            //-         alert('Topup not successful')
            //-     });
            //- });

            $("#withdrawal-btn").click(function() { $("#account-form").submit() });

            $("#account-form").submit(function(e) {
                e.preventDefault();

                const walletBalance = !{balance};
                const amount = $("#amount").val();
                if (+amount > walletBalance) {
                    $(".alert-info").text('Your wallet balance is insufficient for this withdrawal').removeClass('hidden')
                    return;
                }

                $.post('/request-withdrawal', $(this).serialize(), function(d) {
                    if (d.status.trim() === 'success') {
                        $('alert-info').addClass('hidden')
                        toastr.success('Your withdrawal request has been reveived. It will take about 24 hours to process', 'Request Sent');
                    }
                })
            });
        });


        $("#btn-save").click(function() {
            const currency = $("#default_currency option:selected").val();
            if (!currency) return;

            if (confirm("You are about to change your default currency setting. This change will reflect in your wallet balance and currency you\'ll invest in, but will not affect your active portfolios.")) {

                $.post('/users/update?currency=true', { currency }, function(d) {
                    if (d.status.trim() === 'success') {
                        location.reload();
                    }
                });
            }
        });