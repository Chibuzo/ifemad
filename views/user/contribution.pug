extends layout 

block content
    .card.bg-light-info.shadow-none.position-relative.overflow-hidden
        .card-body.px-4.py-3
            .row.align-items-center
                .col-9
                    h4.fw-semibold.mb-8 Contributions
                    nav(aria-label='breadcrumb')
                        ol.breadcrumb
                            li.breadcrumb-item
                                a.text-muted(href='index.html') Home
                            li.breadcrumb-item(aria-current='page') Contributions
                .col-3
                    .text-center.mb-n5

    .card.w-100.position-relative.overflow-hidden
        .px-4.py-3.border-bottom
            .card-title.fw-semibold.mb-0.lh-sm Annual Contributions
                button.btn.btn-danger.float-end(data-bs-toggle="modal" data-bs-target="#confirmationModal") New Contribution
        .card-body.p-4
            .table-responsive.rounded-2.mb-4
                table.table
                    thead
                        tr
                            th Date
                            th Reference
                            th Channel
                            th Amount
                            th Status

                    tbody
                        each trnx in contributions
                            tr
                                td= view.formatDate(trnx.createdAt)
                                td= trnx.reference 
                                td= trnx.channel 
                                td= 'â‚¦' + view.formatCurrency(trnx.amount) 
                                td
                                    if (trnx.status == 'pending') 
                                        span.badge.bg-light-warning.text-warning.rounded-pill
                                            span.round-8.bg-warning.rounded-circle.d-inline-block.me-1
                                            | #{trnx.status}
                                    else if (trnx.status == 'success') 
                                        span.badge.bg-light-success.text-success.rounded-pill
                                            span.round-8.bg-success.rounded-circle.d-inline-block.me-1  
                                            | #{trnx.status}
                                    else if (trnx.status == 'failed') 
                                        span.badge.bg-light-danger.text-danger.rounded-pill
                                            span.round-8.bg-danger.rounded-circle.d-inline-block.me-1  
                                            | #{trnx.status}

block Modals 
    #confirmationModal.modal.fade(tabindex='0' aria-hidden='true')
        .modal-dialog.modal-lg
            .modal-content
                .modal-header
                    h5.modal-title Monthly Contribution
                    button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close') 

                .modal-body
                    .card.text-center
                        .card-header
                            | #[strong Confirm contribution amount:]
                        .card-body
                            p.mb-1 Minimum amount to pay per month: 1,000 NGN
                                .row.justify-content-md-center
                                    .col-md-3
                                        .input-group
                                            span.input-group-text#inputGroup-sizing-lg NGN
                                            input.form-control(type="text" id="amount" placeholder="1000" aria-describedby="inputGroup-sizing-lg")

                .modal-footer
                    button.btn.btn-info(type='button' onClick=`createContribution()`) Continue to Payment 

block scriptBlock
    script(src="https://js.paystack.co/v1/inline.js")
    script. 

        function createContribution() {
            const amount = +document.getElementById("amount").value;
            fetch("/user/contribution", {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ amount })
            }).then((d) => { return d.json(); }).then(d => {
                if (d.status.trim() == 'success') {
                    payWithPaystack(amount * 100, d.reference);
                }
            });
        }

        function payWithPaystack(amount, ref) {
            const handler = PaystackPop.setup({
                key: !{JSON.stringify(publicKey)},
                email: !{JSON.stringify(user.email)},
                amount,
                ref,
                currency: 'NGN',
                callback: function(response) {
                    const { reference, status } = response;

                    fetch("/complete-payment?reference=" + reference, {
                        method: 'GET',
                        headers: {
                            "Content-Type": "application/json",
                        }
                    }).then((d) => { location.reload() });
                },
                onClose: function(){
                    alert('Payment cancelled');
                }
            });
            handler.openIframe();
        }